spring:
  config:
    activate:
      on-profile: default

  datasource:
    url: jdbc:postgresql://localhost:5432/userdb
    username: postgres
    password: 12345

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: localhost:29092

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
      group-id: user-service-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: com.astonlabs.dto
        spring.json.value.default.type: com.astonlabs.dto.UserEvent
        spring.json.use.type.headers: false

  mail:
    host: smtp.gmail.com
    port: 587
    username: bsuabiturient2018@gmail.com
    password: fkem ouyt irep jjhv
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

kafka:
  topic:
    user-events: user-events

---

spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:postgresql://localhost:5432/testdb
    username: postgres
    password: 12345

  jpa:
    hibernate:
      ddl-auto: create-drop

  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}

kafka:
  topic:
    user-events: user-events-test